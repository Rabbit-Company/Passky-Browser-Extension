/*
XChaCha20-JS v1.0.2
https://github.com/Rabbit-Company/XChaCha20-JS
License: GPL-3.0
*/
class XChaCha20{constructor(){this.keystream=NaN,this.encryptedText=NaN,this.plaintext=NaN,this.nonce=NaN}rotateleft=(t,e)=>t<<e|t>>>32-e;le32=(t,e,h,$)=>(t^e<<8^h<<16^$<<24)>>>0;int2(t){var e,h;let $=[];for(h=0;h<t.length;h++)$.push(parseInt(e=t.charCodeAt(h).toString(16),16));return $}Qround(t,e,h,$,c){t[e]+=t[h],t[c]^=t[e],t[c]=this.rotateleft(t[c],16),t[$]+=t[c],t[h]^=t[$],t[h]=this.rotateleft(t[h],12),t[e]+=t[h],t[c]^=t[e],t[c]=this.rotateleft(t[c],8),t[$]+=t[c],t[h]^=t[$],t[h]=this.rotateleft(t[h],7),t[e]>>>=0,t[h]>>>=0,t[$]>>>=0,t[c]>>>=0}Inner_Block(t){this.Qround(t,0,4,8,12),this.Qround(t,1,5,9,13),this.Qround(t,2,6,10,14),this.Qround(t,3,7,11,15),this.Qround(t,0,5,10,15),this.Qround(t,1,6,11,12),this.Qround(t,2,7,8,13),this.Qround(t,3,4,9,14)}Chacha20_BlockFunction(t,e,h){let $=[];$[0]=1634760805,$[1]=857760878,$[2]=2036477234,$[3]=1797285236,$[4]=this.le32(t[0],t[1],t[2],t[3]),$[5]=this.le32(t[4],t[5],t[6],t[7]),$[6]=this.le32(t[8],[9],t[10],t[11]),$[7]=this.le32(t[12],t[13],t[14],t[15]),$[8]=this.le32(t[16],t[17],[18],t[19]),$[9]=this.le32(t[20],t[21],[22],t[23]),$[10]=this.le32(t[24],t[25],t[26],t[27]),$[11]=this.le32(t[28],t[29],t[30],t[31]),$[12]=h,$[13]=this.le32(e[0],e[1],e[2],e[3]),$[14]=this.le32(e[4],e[5],e[6],e[7]),$[15]=this.le32(e[8],e[9],e[10],e[11]);let c=new Uint32Array($.slice());for(let n=1;n<=10;n++)this.Inner_Block(c);let i=[];for(let l=0,r=0;l<16;l++)$[l]+=c[l],i[r++]=255&$[l],i[r++]=$[l]>>>8&255,i[r++]=$[l]>>>16&255,i[r++]=$[l]>>>24&255;return i}HChacha20_BlockFunction(t,e){let h=[];h[0]=1634760805,h[1]=857760878,h[2]=2036477234,h[3]=1797285236,h[4]=this.le32(t[0],t[1],t[2],t[3]),h[5]=this.le32(t[4],t[5],t[6],t[7]),h[6]=this.le32(t[8],[9],t[10],t[11]),h[7]=this.le32(t[12],t[13],t[14],t[15]),h[8]=this.le32(t[16],t[17],[18],t[19]),h[9]=this.le32(t[20],t[21],[22],t[23]),h[10]=this.le32(t[24],t[25],t[26],t[27]),h[11]=this.le32(t[28],t[29],t[30],t[31]),h[12]=this.le32(e[0],e[1],e[2],e[3]),h[13]=this.le32(e[4],e[5],e[6],e[7]),h[14]=this.le32(e[8],e[9],e[10],e[11]),h[15]=this.le32(e[12],e[13],e[14],e[15]);let $=new Uint32Array(h.slice());for(let c=1;c<=10;c++)this.Inner_Block($);let n=$.slice(0,4),i=$.slice(12,16),l=new Uint32Array(n.length+i.length);l.set(n),l.set(i,n.length);let r=[];for(let s=0,_=0;s<8;s++)r[_++]=255&l[s],r[_++]=l[s]>>>8&255,r[_++]=l[s]>>>16&255,r[_++]=l[s]>>>24&255;return r}chacha20_encrypt(t,e,h,$){let c=[];c.push(...this.Chacha20_BlockFunction(t,h,e));let n=0;for(let i=0;i<$.length;i++)64==n&&(e++,c.push(...this.Chacha20_BlockFunction(t,h,e)),n=0),$[i]=parseInt($[i],16),n++;let l=[];for(let r=0;r<=$.length;r++)l[r]=$[r]^c[r];this.keystream=c,this.encryptedText=l}chacha20_decrypt(t,e,h,$){let c=[];c.push(...this.Chacha20_BlockFunction(t,h,e));let n=0;for(let i=0;i<$.length;i++)64==n&&(e++,c.push(...this.Chacha20_BlockFunction(t,h,e)),n=0),n++;let l=[];for(let r=0;r<this.encryptedText.length;r++)l[r]=this.encryptedText[r]^c[r];this.plaintext=l}xchacha20_decrypt(t,e){this.encryptedText=this.int2(XChaCha20.b64DecodeUnicode(e));let h=this.encryptedText.slice(-24);this.encryptedText=this.encryptedText.slice(0,-24);let $=this.HChacha20_BlockFunction(t,h.slice(0,16)),c=[0,0,0,0];c.push(...h.slice(16,24)),this.chacha20_decrypt($,0,c,this.encryptedText)}xchacha20_encrypt(t,e,h){let $=this.HChacha20_BlockFunction(t,e.slice(0,16)),c=[0,0,0,0];c.push(...e.slice(16,24)),this.chacha20_encrypt($,0,c,h)}static convertToText(t){let e="";for(let h=0;h<t.length;h++)e+=String.fromCharCode(t[h]);return e}static hexEncode(t){var e,h;let $=[];for(h=0;h<t.length;h++)$.push(e=t.charCodeAt(h).toString(16));return $}static b64EncodeUnicode(t){return btoa(encodeURIComponent(t).replace(/%([0-9A-F]{2})/g,function t(e,h){return String.fromCharCode("0x"+h)}))}static b64DecodeUnicode(t){return decodeURIComponent(atob(t).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""))}static randomNonce(){var t=new Uint8Array(24);return crypto.getRandomValues(t),t}static encrypt(t,e){t=XChaCha20.hexEncode(t),e=XChaCha20.hexEncode(e);let h=XChaCha20.randomNonce(),$=new XChaCha20;return $.xchacha20_encrypt(e,h,t),$.encryptedText.push(...h),$.encryptedText=XChaCha20.b64EncodeUnicode(XChaCha20.convertToText($.encryptedText)),$.encryptedText}static decrypt(t,e){e=XChaCha20.hexEncode(e);let h=new XChaCha20;return h.xchacha20_decrypt(e,t),XChaCha20.convertToText(h.plaintext).replace("\0","")}}